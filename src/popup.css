:root {
    /* change this once to resize your whole popup */
  --popup-size: 340px;
  
  /* Color Scheme - Adjusted for the desired darker UI */
  --bg: #0F0F0F; /* Darker background */
  --fg: #E0E0E0; /* Slightly softer foreground white */
  --borders: #aaaaaa; /* DEBUG for border color */
  --accent: #ff5722; /* Reddish-orange for active elements like dots/progress */
  --accent-light: rgba(255,87,34,0.3);
  --shadow: 0 2px 8px rgba(0,0,0,0.3); /* Subtler shadow */
  --font: 'Helvetica Neue', Helvetica, Arial, sans-serif;
  --break-color: #4caf50;

  /* New variables for the Start Button */
  --start-btn-bg: #4A4A4A;  /* Gray background for START button */
  --start-btn-fg: #1E1E1E;  /* Dark text for START button */
  --start-btn-border: #4A4A4A; /* Border for START button, matching background */

  /* New variables for icon border and spacing */
  --icon-glyph-size: 24px;
  --icon-border-thickness-new: 1px;  /* Thickness of the new border */
  --icon-breathing-room: 3px;        /* 3px space between icon glyph and its border */

  /* Icons as CSS vars */
  --icon-clock16:    url('/icons/clock-16.png');
  --icon-clock48:    url('/icons/clock-48.png');
  --icon-eye:        url('/icons/fluent-eye-16-reg.svg');
  --icon-reset:      url('/icons/fluent-arrow-counterclockwise-16-reg.svg');
  --icon-back:       url('/icons/fluent-chevron-left-16-regular.svg');
  --icon-forward:    url('/icons/fluent-chevron-right-16-regular.svg');
  --icon-plus:       url('/icons/fluent-add-16-regular.svg');
  --icon-minus:      url('/icons/fluent-subtract-16-regular.svg');
  --icon-settings:   url('/icons/fluent-settings-20-regular.svg');
  --icon-coffee:     url('/icons/fluent-drink-coffee-16-regular.svg');
  --icon-close:      url('/icons/fluent-dismiss-16-regular.svg');
  --icon-check-flag: url('/icons/checkered-flag.svg');
  --icon-clap:       url('/icons/noun-clap.svg');
}

/* ───── After your :root block ───── */
html, body {
  width:  var(--popup-size) !important;  /* new */
  height: var(--popup-size) !important;  /* new */
  margin: 0;
  padding: 0;
  overflow: hidden;                      /* new */
}

/* -- Theme override for light mode: set on <body data-theme="light"> -- */
/* Kept for completeness, but primary styling targets the dark theme from screenshot */
body[data-theme="light"] {
  --bg: #ffffff;
  --fg: #222222;
  --accent: #ff5722;
  --accent-light: rgba(255,87,34,0.1);
  --start-btn-bg: #E0E0E0; /* Light mode Start button background */
  --start-btn-fg: #222222;  /* Light mode Start button text */
  --start-btn-border: #CCCCCC;
}

/* The body[data-theme="dark"] rule is removed as the :root now defaults
   to the desired dark theme. If you implement a theme switcher,
   you might re-introduce it or adjust :root and light theme accordingly.
*/

/* ——— Icons config (Simplified and Corrected) ——— */
.icon-btn {
  position: relative; /* Keep this for pseudo-element positioning */
  display: inline-flex;
  align-items: center;
  justify-content: center;
  width: 40px;          /* Icon glyph will be smaller, within this tap target */
  height: 40px;
  padding: 8px;         /* Padding around the icon mask area */
  /* border: 1px solid var(--fg); Default border for icon buttons */
  /* border-radius: 50%; */
  background-color: transparent; /* Ensure button bg is transparent */
  cursor: pointer;
  /* The mask will be applied directly to this element using specific classes below */
}

/* The generic .icon-btn::before and specific .icon-btn.semantic::before rules
   have been removed. Icons are now applied directly via mask on the .icon-btn element itself.
   This gives better control over icon size and placement.
*/

/* Map semantic classes → CSS masks with var(--fg) painting the icon */
/* This approach masks the button itself, using its background for the icon color. */
.icon-btn.clock16,
.icon-btn.clock48,
.icon-btn.eye,
.icon-btn.reset,
.icon-btn.back,
.icon-btn.forward,
.icon-btn.plus,
.icon-btn.minus,
.icon-btn.settings,
.icon-btn.coffee,
.icon-btn.close,
.icon-btn.clap,
.icon-check-flag { /* Added .close for completeness if an icon is defined */
  background-image: none; /* Remove any accidental background images */
  background-color: var(--fg); /* This color becomes the icon color through the mask */
  -webkit-mask-repeat: no-repeat;
  mask-repeat: no-repeat;
  -webkit-mask-position: center;
  mask-position: center;
  -webkit-mask-size: contain; /* Or set to fixed size like 16px 16px if needed */
  mask-size: contain;
  /* Use the new variable for icon size */
  -webkit-mask-size: var(--icon-glyph-size) var(--icon-glyph-size); /* Controlled by new variable */
  mask-size: var(--icon-glyph-size) var(--icon-glyph-size); 
}

/* Assign the correct mask image to each semantic class */
.icon-btn.clock16    { -webkit-mask-image: var(--icon-clock16);    mask-image: var(--icon-clock16); }
.icon-btn.clock48    { -webkit-mask-image: var(--icon-clock48);    mask-image: var(--icon-clock48); }
.icon-btn.eye        { -webkit-mask-image: var(--icon-eye);        mask-image: var(--icon-eye); }
.icon-btn.reset      { -webkit-mask-image: var(--icon-reset);    mask-image: var(--icon-reset); }
.icon-btn.back       { -webkit-mask-image: var(--icon-back);       mask-image: var(--icon-back); }
.icon-btn.forward    { -webkit-mask-image: var(--icon-forward);    mask-image: var(--icon-forward); }
.icon-btn.plus       { -webkit-mask-image: var(--icon-plus);       mask-image: var(--icon-plus); }
.icon-btn.minus      { -webkit-mask-image: var(--icon-minus);      mask-image: var(--icon-minus); }
.icon-btn.settings   { -webkit-mask-image: var(--icon-settings);   mask-image: var(--icon-settings); }
.icon-btn.coffee     { -webkit-mask-image: var(--icon-coffee);     mask-image: var(--icon-coffee); }
.icon-btn.close      { -webkit-mask-image: var(--icon-close); mask-image: var(--icon-close); }
.icon-check-flag     { -webkit-mask-image: var(--icon-check-flag); mask-image: var(--icon-check-flag); }
.icon-btn.clap       { -webkit-mask-image: var(--icon-clap); mask-image: var(--icon-clap); }


/* New wrapper for icon buttons that need a circular border */
.icon-border-wrapper {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  /* Calculate wrapper size: icon-btn (40px) + 2*breathing-room (2*3px) + 2*border-thickness (2*1px) = 48px */
  /* This calculation remains the same for the overall touch target size */
  width: calc(40px + 2 * var(--icon-breathing-room) + 2 * var(--icon-border-thickness-new));
  height: calc(40px + 2 * var(--icon-breathing-room) + 2 * var(--icon-border-thickness-new));
  border: var(--icon-border-thickness-new) solid var(--borders);
  border-radius: 50%;
  box-sizing: border-box;
  /* Add padding to the wrapper to create space around the icon and its border */
  padding: var(--icon-breathing-room); /* Added 6px padding all around */
  transition: border-color 0.2s, background-color 0.2s; /* Add transition for smooth hover */
}

/* Span container for rounded white square border around "plus" and "minus" */
.icon-square-wrapper {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 36px; /* Fixed width for the square */
  height: 36px; /* Fixed height for the square */
  border: var(--icon-border-thickness-new) solid var(--borders);
  border-radius: 8px; /* Rounded corners */
  box-sizing: border-box; /* Include padding and border in the element's total width and height */
  transition: border-color 0.2s, background-color 0.2s; /* Add transition for smooth hover */
}

.icon-border-wrapper:hover {
  border-color: #888888; /* A darker grey for the border on hover */
  background-color: rgba(255, 255, 255, 0.05); /* Similar to setting-item hover background */
}

.icon-square-wrapper:hover {
  border-color: #888888; /* A darker grey for the border on hover */
  background-color: rgba(255, 255, 255, 0.05); /* Similar to setting-item hover background */
}

/* ----------------------------------------------------------------------------
                      App Box Layout (popup container)
------------------------------------------------------------------------------ */
* {
  box-sizing: border-box;
}
body {
  margin: 0;
  padding: 0; /* No padding on body itself, handled by views if needed */
  width: 340px; /* As per original */
  background: var(--bg);
  color: var(--fg);
  font-family: var(--font);
  user-select: none;
  /* To match the rounded corners of the popup window in the desired screenshot (OS dependent) */
  border-radius: 8px; /* This might be needed if window isn't naturally rounded */
  /* overflow: hidden;    /* To clip children to the body's border-radius */
}

#app {
  border-radius: 30px; /* Fix: Apply 30px rounded corners to the main app container */
  overflow: hidden; /* Fix: Ensure content within the app container is clipped by the rounded corners */
  height: 100%; /* Ensure the app div takes full height */
  width: 100%; /* Ensure the app div takes full width */
}

/* -- Common Layout -- */
.view {
  display: none;
  flex-direction: column;
  height: 100%; /* Consider min-height if content is dynamic */
  /* padding: 0.5rem; /* Optional: Add some padding to views if needed */
}
.view.active {
  display: flex;
}

/* bottom‐row layout */
.bottom-bar {
  display: flex;
  justify-content: space-evenly;
  align-items: center;
  padding: 0.75rem 0.5rem; /* Increased vertical padding, added some horizontal */
}

/* START button: pill shape, specific colors, flat look */
.bottom-bar .primary-btn {
  background: var(--start-btn-bg);
  color: var(--start-btn-fg);
  border: 1px solid var(--start-btn-border); /* Subtle border matching background or slightly different */
  padding: 0.75rem 30px;
  border-radius: 24px; /* Pill shape */
  flex: 0 0 auto;       /* Don’t stretch to fill */
  margin: 0;           /* Remove any extra margins from generic button */
  font-size: 1rem;     /* Copied from .primary-btn */
  font-weight: 500;    /* Copied from .primary-btn */
  box-shadow: none;    /* Flat look as per desired UI */
  cursor: pointer;     /* Copied from .primary-btn */
}

.top-bar { /* Added basic styling for .top-bar consistent with original commented out */
  display: flex;
  align-items: center;
  padding: 0.5rem;
}
.top-bar .spacer {
  flex: 1;
}


.title {
  flex: 1; text-align: center; font-weight: 500;
}

/* ----------------------------------------------------------------------------
                                Timer View
------------------------------------------------------------------------------ */

#view-timer {
  /* display: flex; Already handled by .view.active */
  flex-direction: column;
  height: 100%;
}
.timer-container {
  flex: 1;
  display: flex;
  align-items: center;
  justify-content: center;
}

/* Base ring behind everything */
.donut {
  position: relative;
  width: 200px;
  height: 200px;
}
.donut::before {
  content: '';
  position: absolute;
  inset: 0;
  border-radius: 50%;
  background: #333;  /* Dark‐gray ring, contrasts with new darker --bg */
}

/* Rounded front edge - positioned at the progress end */
.progress::before {
  content: '';
  position: absolute;
  /* match your ring thickness (e.g. 12px) or bump by +2px if you see any edges */
  width: 12px;
  height: 12px;
  background: #FF5722;      /* same as your arc color */
  border-radius: 50%;       /* makes it a perfect circle */
  top: 50%;
  left: 50%;
  transform:
    translate(-50%, -50%)                    /* move the dot into the center */
    rotate(calc(var(--deg) - 90deg))         /* spin the dot so 0deg is at 12 o’clock */
    translateX(94px);                        /* push it out to the edge */
  transition: transform 0.2s ease-in;
}

/* Active slice on top */
.progress {
  position: absolute;
  inset: 0;
  border-radius: 50%;
  /* Enhanced conic gradient with fade effect at the end */
  background: conic-gradient(
    from 0deg,
    transparent  0deg,
    #FF5722 var(--deg),                         /* solid up to your angle */
    rgba(255,87,34,0.3) calc(var(--deg)),       /* gentle fade next 10° */
    transparent    calc(var(--deg))               /* snap to fully clear at the head */
  );
  transition: all 0.45s ease-in;
  transform: none;
}

/* Alternative debug version - keep this for now */
.progress::after {
  /* content: attr(data-deg); */
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%) rotate(90deg);
  color: white;
  font-size: 12px;
  pointer-events: none;
  z-index: 10; /* Above other pseudo-elements */
}

/* Center “hole” & contents */
.inner {
  position: absolute;
  inset: 12px; /* Original */
  border-radius: 50%;
  background: var(--bg); /* Matches main background */
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

/* Tweak the eye icon: remove button-like styling */
.inner .icon-btn.eye {
  width: 20px;  /* Keep size from original */
  height: 20px; /* Keep size from original */
  margin-bottom: 0.5rem; /* Original spacing */
  border: none;          /* Remove border */
  padding: 0;            /* Remove padding */
  background-color: var(--fg); /* Icon color, applied via mask */
  /* Mask properties are inherited from .icon-btn.eye */
}

#time-display {
  font-size: 2.5rem; /* Original */
  font-weight: 300;  /* Original */
}

#session-label {
  margin-top: 0.25rem; /* Original */
  font-size: 0.9rem;   /* Original */
  letter-spacing: 1px; /* Original */
}

/* Status Indicators (dots) */
#status-indicators {
  margin-top: 10px;
  display: flex;
  justify-content: center;
  align-items: center;
}

.status {
  display: flex;
  gap: 2px;
  margin-top: 0.5rem;
}

/* INSERT THE DOT STYLING HERE */
.status .dot {
  display: inline-block;
  width: 8px; /* Adjust size as needed */
  height: 8px; /* Adjust size as needed */
  border-radius: 50%; /* Makes it a circle */
  margin: 0 2px; /* Spacing between dots */
  background-color: var(--accent-light); /* Default empty state */
  transition: background-color 0.3s ease; /* Smooth transition for filling */
}

.status .dot.filled {
  background-color: #ff5722; /* Full orange for completed focus sessions */
  border-color: #ff5722; /* Match border color */
}

.status .dot.completed {
  opacity: 1; /* Original */
}

/* General .primary-btn, less specific than .bottom-bar .primary-btn */
/* This can be a fallback or used in other views if needed */
.primary-btn {
  padding: 0.75rem 1rem; /* Default padding */
  background: var(--accent);
  border: none;
  border-radius: 24px;
  font-size: 1rem;
  font-weight: 500;
  box-shadow: var(--shadow); /* Uses the new subtler shadow */
  color: #fff; /* Default text color for primary buttons */
  cursor: pointer;
  /* flex: 1; This was here, but better to control flex in context (e.g., .bottom-bar) */
  /* margin: 0 1rem; Same as above, context-specific margins are better */
}

.skip-fwd-btn {
  background: none;
  border: none;
  color: var(--fg); /* Use foreground color for text */
  font-size: 0.9rem;
  font-weight: 500;
  text-decoration: none;
  cursor: pointer;
  padding: 0.5rem 1rem;
  margin-top: 0.5rem; /* Space it from the row of buttons above */
  align-self: center; /* Center the button horizontally */
  opacity: 0.7; /* Slightly faded when active */
  transition: opacity 0.2s ease;
}

.skip-fwd-btn:hover:not(:disabled) {
  opacity: 1; /* Full opacity on hover when not disabled */
}

.skip-fwd-btn:disabled {
  color: #666; /* Lighter color when disabled */
  cursor: not-allowed;
  text-decoration: none; /* No underline when disabled */
  opacity: 0.4; /* More faded when disabled */
}

/* ----------------------------------------------------------------------------
   Settings View -- (largely untouched, but benefits from global color changes) 
------------------------------------------------------------------------------ */
.tabs {
  display: flex;
  margin: 0.5rem; /* Original */
}
.tab {
  flex: 1;
  padding: 0.5rem 0; /* Original */
  background: none;
  border: none;
  color: var(--fg);
  font-weight: 500;
  cursor: pointer;
  opacity: 0.6; /* Original */
}
.tab.active {
  opacity: 1;
  border-bottom: 2px solid var(--accent); /* Original */
}
.settings-list {
  flex: 1;
  overflow-y: auto; /* Original */
}
.setting-item {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 0.75rem 1rem; /* Original */
  cursor: pointer;
  transition: background 0.2s; /* Original */
}
.setting-item:hover {
  background: rgba(255,255,255,0.05); /* Original */
}
.setting-item span:first-child {
  font-size: 0.95rem; /* Original */
}
.setting-item .arrow {
  /* This class was .icon-btn.forward.arrow */
  /* If it's just an arrow visual, it doesn't need to be a full button */
  /* Assuming it's one of the masked icons */
  width: 16px; height: 16px; /* Explicit size for the arrow glyph area */
  background-color: var(--fg); /* Color for the arrow */
  opacity: 0.6; /* Original */
  -webkit-mask-image: var(--icon-forward);
  mask-image: var(--icon-forward);
  -webkit-mask-repeat: no-repeat;
  mask-repeat: no-repeat;
  -webkit-mask-position: center;
  mask-position: center;
  -webkit-mask-size: contain;
  mask-size: contain;
  /* Remove button-specific styling if it's not interactive */
  border: none;
  padding: 0;
}



/* ----------------------------------------------------------------------------
                      Adjustment View Specific Styles
------------------------------------------------------------------------------ */
.adjust-body {
    flex: 1; /* Allows it to take up remaining vertical space */
    display: flex;
    align-items: center; /* Vertically center the content wrapper */
    justify-content: center; /* Horizontally center the content wrapper */
    padding: 1rem; /* Padding around the main content area */
}

/* Wrapper for the title and timer adjustment, stacked vertically */
.adjust-content-wrapper {
    display: flex;
    flex-direction: column; /* Stack elements vertically */
    align-items: center; /* Center items horizontally within this wrapper */
    gap: 2rem; /* Space between the title and the timer adjustment row */
    width: 100%; /* Take full width to allow centering of its children */
}

/* Styling for the title within the adjustment view (e.g., "Focus Session") */
.adjust-title {
    font-size: 1.5rem; /* Larger font size for the title */
    font-weight: 500;
    color: var(--fg);
    text-align: center;
    margin-bottom: 0; /* Remove default bottom margin */
}

/* Container for the minus button, number input, and plus button, arranged horizontally */
.timer-adjustment-container {
    display: flex;
    align-items: center; /* Vertically align items in the row */
    justify-content: center; /* Horizontally center the row */
    gap: 2rem; /* Space between the buttons and the input group */
}

/* Styling for the numeric input field */
.number-input {
    width: 80px; /* Wider for the large number */
    background: none; /* No background */
    border: none; /* No default border */
    border-bottom: 1px solid var(--fg); /* Bottom border */
    color: var(--fg); /* Text color */
    font-size: 3rem; /* Large font size for the number */
    text-align: center; /* Center the text */
    padding-bottom: 0.25rem; /* Padding below the number */
    outline: none; /* Remove outline on focus */
}

/* Hide scrollbar / spinner for number input */
 .number-input::-webkit-outer-spin-button,
 .number-input::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
} 

 .number-input[type=number] {
  -moz-appearance: textfield;
}

/* Styling for the unit text (e.g., "min" or "Sess.") */
.adjust-unit {
    text-align: center;
    padding-top: 0.25rem; /* Space above the unit */
    font-size: 1rem; /* Font size for the unit */
    color: var(--fg); /* Color of the unit text */
    opacity: 0.8; /* Slightly faded */
}

/* Styling for the unit text (e.g., "min" or "Sess.") */
.adjust-unit {
    text-align: center;
    padding-top: 0.25rem; /* Space above the unit */
    font-size: 1rem; /* Font size for the unit */
    color: var(--fg); /* Color of the unit text */
    opacity: 0.8; /* Slightly faded */
}

/* New group for number input and unit, stacked vertically. */
/* This rule was already there, but keeping it for completeness if you replace the whole block */
.adjust-input-group {
    display: flex;
    flex-direction: column; /* Stack input and unit vertically */
    align-items: center; /* Center them horizontally */
    justify-content: center;
}


/* ----------------------------------------------------------------------------
                      Completed View Specific Styles
------------------------------------------------------------------------------ */
#view-completed .completed-content {
  display: flex;
  justify-content: center;
  align-items: center;
  height: calc(100% - 40px); /* Adjust for header and footer */
  flex-grow: 1; /* Allow it to take available space */
}

#view-completed .completed-text-container {
  display: flex;
  flex-direction: column;
  align-items: center;
}

#view-completed .completed-text {
  font-size: 2.2rem; /* Or your desired size, e.g., 2.5rem to match the timer */
  color: white;
  margin-bottom: 10px; /* Space between text and icons */
  margin-top: 30px; /* Initial adequate headroom. Adjust this value for desired spacing. */
}

#view-completed .clap-icons {
  display: flex;
  gap: 2px; /* Space between clap icons */
}

#view-completed .icon-btn.clap {
  -webkit-mask-image: var(--icon-clap); /* Ensure these are still here or inherited */
  mask-image: var(--icon-clap);         /* Ensure these are still here or inherited */
  background-color: var(--fg);          /* Ensure this is still here or inherited */

  /* Adjust size */
  -webkit-mask-size: 48px 48px; /* Example: larger size */
  mask-size: 48px 48px;         /* Example: larger size */

  /* Keep other .icon-btn properties as needed or let them inherit */
}

/* ----------------------------------------------------------------------------
                      Transitions Timing & Specific Styles
------------------------------------------------------------------------------ */

.view {
  transition: opacity 0.3s ease, transform 0.3s ease; /* Original */
}
